openapi: 3.0.0
info:
  version: '1.0.0'
  title: 'finances'
servers:
  - url: 'localhost:3000'
paths:
  /incomes/{id}:
    get:
      summary: 'Return a income by ID'
      operationId: getIncome
      tags:
        - income
      parameters:
        - name: id
          in: path
          description: ID of the income
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncomeDTO'
        404:
          description: Not Found

    delete:
      summary: 'Deletes a income by ID'
      operationId: deleteIncome
      tags:
        - income
      parameters:
        - name: id
          in: path
          description: ID of the income
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: 'Deleted successfully'
        404:
          description: Not Found

    put:
      summary: 'Updates a income by ID'
      operationId: updateIncome
      tags:
        - income
      parameters:
        - name: id
          in: path
          description: ID of the income
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateIncomeDTO'
        #requered: true
      responses:
        '204':
          description: 'Deleted successfully'
        404:
          description: Not Found
        422:
          $ref: '#/components/responses/UnprocessableEntity'

  /incomes:
    post:
      summary: 'Creates a income'
      operationId: createIncome
      tags:
        - income
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateIncomeDTO'
        required: true
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncomeDTO'
        422:
          $ref: '#/components/responses/UnprocessableEntity'

    get:
      summary: 'Income list'
      operationId: listIncomes
      tags:
        - income
      parameters:
        - name: description
          in: query
          description: Description of the income
          schema:
            type: string
        - name: start_at
          in: query
          description: Start date
          schema:
            type: string
            format: date
        - name: end_at
          in: query
          description: End date
          schema:
            type: string
            format: date
        - name: id_account
          in: query
          description: Id account
          schema:
            type: integer
            format: int64
        - name: type_income
          in: query
          description: Type income
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IncomeDTO'

  /expense/{id}:
    get:
      summary: 'Return a expense by ID'
      operationId: getExpense
      tags:
        - expense
      parameters:
        - name: id
          in: path
          description: ID of the expense
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpenseDTO'
        404:
          description: Not Found

    delete:
      summary: 'Deletes a expense by ID'
      operationId: deleteExpense
      tags:
        - expense
      parameters:
        - name: id
          in: path
          description: ID of the expense
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: 'Deleted successfully'
        404:
          description: Not Found

  /expense:
    post:
      summary: 'Creates a expense'
      operationId: createExpense
      tags:
        - expense
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateExpenseDTO'
        required: true
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpenseDTO'
        422:
          $ref: '#/components/responses/UnprocessableEntity'

  /account/{id}:
    get:
      summary: 'Return a account by ID'
      operationId: getAccount
      tags:
        - account
      parameters:
        - name: id
          in: path
          description: ID of the account
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountDTO'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'

    delete:
      summary: 'Deletes a account by ID'
      operationId: deleteAccount
      tags:
        - account
      parameters:
        - name: id
          in: path
          description: ID of the account
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: 'Deleted successfully'
        404:
          description: Not Found

  /account:
    post:
      summary: 'Creates a account'
      operationId: createAccount
      tags:
        - account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAccountDTO'
        required: true
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountDTO'
        422:
          $ref: '#/components/responses/UnprocessableEntity'

components:
  schemas:
    UpdateIncomeDTO:
      type: object
      properties:
        description:
          type: string
        receipt_date:
          type: string
          format: date
        expected_receipt_date:
          type: string
          format: date
        id_account:
          type: integer
          format: int64
        type_income:
          type: string

    CreateIncomeDTO:
      type: object
      allOf:
        - $ref: '#/components/schemas/UpdateIncomeDTO'

    IncomeDTO:
      type: object
      allOf:
        - $ref: '#/components/schemas/CreateIncomeDTO'
        - type: object
          properties:
            id:
              type: integer
              format: int64

    ResponseError:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        status:
          type: string
        message:
          type: string

    CreateExpenseDTO:
      type: object
      properties:
        value_:
          type: number
          format: double
        payday:
          type: string
          format: date
        expected_payday:
          type: string
          format: date
        type_expense:
          type: string
        id_account:
          type: integer
          format: int64

    ExpenseDTO:
      type: object
      allOf:
        - $ref: '#/components/schemas/CreateExpenseDTO'
        - type: object
          properties:
            id:
              type: integer
              format: int64

    CreateAccountDTO:
      type: object
      properties:
        balance:
          type: number
          format: double
        type_account:
          type: string
        financial_institution:
          type: string

    AccountDTO:
      type: object
      allOf:
        - $ref: '#/components/schemas/CreateAccountDTO'
        - type: object
          properties:
            id:
              type: integer
              format: int64

  responses:
    UnprocessableEntity:
      description: The server understands the content type of the request entity but was unable to process
        the conteined instructions.

  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic

security:
  - BasicAuth: []